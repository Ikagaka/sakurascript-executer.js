{"version":3,"sources":["lib/sakurascript-executer.js"],"names":[],"mappings":"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","file":"sakurascript-executer.js","sourcesContent":["import {EventEmitter} from 'events';\r\nimport {SakuraScript, SakuraScriptToken} from 'sakurascript';\r\n\r\n/**\r\n * SakuraScript Executer\r\n */\r\nexport class SakuraScriptExecuter extends EventEmitter {\r\n  /**\r\n   * constructor\r\n   * @param {object} options options\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    /** @type {Object} surface mapping */\r\n    this.surface_mapping = options.surface_mapping || {};\r\n    /** @type {number} talk default wait */\r\n    this.talk_wait = options.talk_wait || 0;\r\n    /** @type {Boolean} quick mode */\r\n    this.quick = options.quick || false;\r\n  }\r\n\r\n  /**\r\n   * execute sakura script\r\n   * @param {string} script sakura script\r\n   * @emits {sakurascript} sakura script token event\r\n   * @return {void}\r\n   */\r\n  async execute(script) {\r\n    const sakurascript = SakuraScript.parse(script);\r\n    this._initialize_execute_state();\r\n    for (const token of sakurascript.tokens) {\r\n      if (this.wait_until_action) {\r\n        await this._wait_until_action(this.wait_until_action);\r\n        this.wait_until_action = null;\r\n      } else if (!this.quick) {\r\n        if (this.wait != null) {\r\n          await this._wait(this.wait);\r\n          this.wait = null;\r\n        } else if (token instanceof Char && !this.quick_section) {\r\n          await this._wait(this.talk_wait);\r\n        }\r\n      }\r\n      if (this.will_abort) break;\r\n      this.emit('sakurascript', token);\r\n      if (token instanceof SakuraScriptToken.Char) {\r\n        continue;\r\n      } else if (token instanceof SakuraScriptToken.Surface) {\r\n        this.surface_id = token.surface;\r\n      } else if (token instanceof SakuraScriptToken.SurfaceAlias) {\r\n        const surface_id = this.surface_mapping[token.surface_alias];\r\n        if (surface_id) this.surface_id = surface_id;\r\n      } else if (token instanceof SakuraScriptToken.PlayAnimationWait) {\r\n        this.wait_until_action = `_animation_finished_${this.surface_id}_${token.animation}`;\r\n      } else if (token instanceof SakuraScriptToken.WaitAnimationEnd) {\r\n        this.wait_until_action = `_animation_finished_${this.surface_id}_${token.id}`;\r\n      } else if (token instanceof SakuraScriptToken.WaitFromBeginning) {\r\n        const period = new Date() - this.execute_start_time;\r\n        if (period > 0) this.wait = period;\r\n      } else if (token instanceof SakuraScriptToken.ResetBeginning) {\r\n        this.execute_start_time = new Date();\r\n      } else if (token instanceof SakuraScriptToken.WaitClick) {\r\n        this.execute_start_time = new Date();\r\n        this.wait_until_action = '_balloon_clicked';\r\n      } else if (token instanceof SakuraScriptToken.SimpleWait) {\r\n        this.wait = token.period * 50;\r\n      } else if (token instanceof SakuraScriptToken.PreciseWait) {\r\n        this.wait = token.period;\r\n      } else if (token instanceof SakuraScriptToken.ToggleQuick) {\r\n        this.quick_section = !this.quick_section;\r\n      }\r\n    }\r\n    this._finalize_execute_state();\r\n  }\r\n\r\n  _initialize_execute_state() {\r\n    this.executing = true;\r\n    this.wait = 0;\r\n    this.wait_until_action = null;\r\n    this.quick_section = false;\r\n    this.will_abort = false;\r\n    this.current_wait = null;\r\n    this.execute_start_time = new Date();\r\n  }\r\n\r\n  _finalize_execute_state() {\r\n    this.executing = false;\r\n  }\r\n\r\n  async _wait(period) {\r\n    return new Promise((resolve) => {\r\n      this.current_wait = resolve;\r\n      setTimeout(() => resolve(period), period);\r\n    }).then(() => {\r\n      this.current_wait = null;\r\n    });\r\n  }\r\n\r\n  async _wait_until_action(name) {\r\n    return new Promise((resolve) => {\r\n      this.current_wait = resolve;\r\n      this[name] = resolve;\r\n    }).then(() => {\r\n      this.current_wait = null;\r\n      delete this[name];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * call when balloon clicked\r\n   * @return {void}\r\n   */\r\n  balloon_clicked() {\r\n    if (this._balloon_clicked) this.balloon_clicked();\r\n  }\r\n\r\n  /**\r\n   * call when animation finished\r\n   * @return {void}\r\n   */\r\n  animation_finished(surface_id, animation_id) {\r\n    const done = this[`_animation_finished_${surface_id}_${animation_id}`];\r\n    if (done) done();\r\n  }\r\n\r\n  /**\r\n   * call when you want to abort\r\n   * @return {void}\r\n   */\r\n  abort_execute() {\r\n    this.will_abort = true;\r\n    if (this.current_wait) this.current_wait();\r\n  }\r\n}\r\n"]}