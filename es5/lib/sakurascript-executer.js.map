{"version":3,"sources":["lib/sakurascript-executer.js"],"names":[],"mappings":"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","file":"sakurascript-executer.js","sourcesContent":["import {EventEmitter} from 'events';\nimport {SakuraScript, SakuraScriptToken} from 'sakurascript';\n\n/**\n * SakuraScript Executer\n */\nexport class SakuraScriptExecuter extends EventEmitter {\n  /**\n   * constructor\n   * @param {object} options options\n   */\n  constructor(options = {}) {\n    super();\n    this._quick = options.quick || false;\n    this._talk_wait = options.talk_wait || 0;\n    this._executing = false;\n    this._execute_id = 0;\n    this._will_abort_id = 0;\n  }\n\n  /**\n   * quick mode\n   * @type {Boolean}\n   */\n  get quick() { return this._quick; }\n\n  /**\n   * quick mode\n   * @type {Boolean}\n   */\n  set quick(value) { this._quick = value; }\n\n  /**\n   * default talk wait\n   * @type {number}\n   */\n  get talk_wait() { return this._talk_wait; }\n\n  /**\n   * true if executing\n   * @type {Boolean}\n   */\n  get executing() { return this._executing; }\n\n  /**\n   * execute sakura script\n   * @param {string} script sakura script\n   * @emits {begin_execute()} sakurascript execute begin event\n   * @emits {execute(token)} sakurascript execute token event\n   * @emits {end_execute(is_abort)} sakurascript execute end event\n   * @return {void}\n   */\n  async execute(script) {\n    this.abort_execute(); // abort previous session\n    const execute_id = ++this._execute_id;\n    const sakurascript = SakuraScript.parse(script);\n    this.emit('begin_execute');\n    this._initialize_execute_state();\n    for (const token of sakurascript.tokens) {\n      if (this._wait_until_action_name) {\n        await this._wait_until_action(this._wait_until_action_name);\n        this._wait_until_action_name = null;\n      } else if (!this.quick) {\n        if (this._wait_period != null) {\n          await this._wait(this._wait_period);\n          this._wait_period = null;\n        } else if (token instanceof SakuraScriptToken.Char && !this._quick_section) {\n          await this._wait(this.talk_wait);\n        }\n      }\n      if (this._will_abort_id >= execute_id) break;\n      this.emit('execute', token);\n      if (token instanceof SakuraScriptToken.Char) {\n        continue;\n      } else if (token instanceof SakuraScriptToken.PlayAnimationWait) {\n        this._wait_until_action_name = `_animation_finished_${token.animation}`;\n      } else if (token instanceof SakuraScriptToken.WaitAnimationEnd) {\n        this._wait_until_action_name = `_animation_finished_${token.id}`;\n      } else if (token instanceof SakuraScriptToken.WaitFromBeginning) {\n        const period = new Date() - this._execute_start_time;\n        if (period > 0) this._wait_period = period;\n      } else if (token instanceof SakuraScriptToken.ResetBeginning) {\n        this._execute_start_time = new Date();\n      } else if (token instanceof SakuraScriptToken.WaitClick) {\n        this._execute_start_time = new Date();\n        this._wait_until_action_name = '_balloon_clicked';\n      } else if (token instanceof SakuraScriptToken.SimpleWait) {\n        this._wait_period = token.period * 50;\n      } else if (token instanceof SakuraScriptToken.PreciseWait) {\n        this._wait_period = token.period;\n      } else if (token instanceof SakuraScriptToken.ToggleQuick) {\n        this._quick_section = !this._quick_section;\n      }\n    }\n    this._finalize_execute_state();\n    this.emit('end_execute', this._will_abort_id >= execute_id);\n  }\n\n  _initialize_execute_state() {\n    this._executing = true;\n    this._wait_period = 0;\n    this._wait_until_action_name = null;\n    this._quick_section = false;\n    this._current_wait = null;\n    this._execute_start_time = new Date();\n  }\n\n  _finalize_execute_state() {\n    this._executing = false;\n  }\n\n  async _wait(period) {\n    return new Promise((resolve) => {\n      this._current_wait = resolve;\n      setTimeout(() => resolve(period), period);\n    }).then(() => {\n      this._current_wait = null;\n    });\n  }\n\n  async _wait_until_action(name) {\n    return new Promise((resolve) => {\n      this._current_wait = resolve;\n      this[name] = resolve;\n    }).then(() => {\n      this._current_wait = null;\n      delete this[name];\n    });\n  }\n\n  /**\n   * call when balloon clicked\n   * @return {void}\n   */\n  balloon_clicked() {\n    if (this._balloon_clicked) this._balloon_clicked();\n  }\n\n  /**\n   * call when animation finished\n   * @param {number} animation_id animation id\n   * @return {void}\n   */\n  animation_finished(animation_id) {\n    const done = this[`_animation_finished_${animation_id}`];\n    if (done) done();\n  }\n\n  /**\n   * call when you want to abort\n   * @return {void}\n   */\n  abort_execute() {\n    this._will_abort_id = this._execute_id;\n    if (this._current_wait) this._current_wait();\n  }\n}\n"]}